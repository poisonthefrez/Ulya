const gameArea = document.getElementById('game-area');
const scoreEl = document.getElementById('score');
const messageEl = document.getElementById('message');
const startBtn = document.getElementById('start-btn');

const creatures = ['üê±', 'üê∞', 'üêº', 'üê≠', 'ü¶ä', 'üê®', 'üêª'];
const cutePhrases = [
  "–¢—ã —Å–æ–ª–Ω—ã—à–∫–æ ‚òÄÔ∏è",
  "–¢—ã –º–æ–π –ª—É—á–∏–∫ —Å–≤–µ—Ç–∞ ‚ú®",
  "–¢—ã —Å–∞–º–∞—è –º–∏–ª–∞—è üíñ",
  "–¢—ã ‚Äî –Ω–∞—Å—Ç–æ—è—â–µ–µ —á—É–¥–æ üåà",
  "–¢–≤–æ—è —É–ª—ã–±–∫–∞ —Å–æ–≥—Ä–µ–≤–∞–µ—Ç –º–∏—Ä üòä",
  "–¢—ã –¥–µ–ª–∞–µ—à—å –≤—Å—ë –≤–æ–∫—Ä—É–≥ –ª—É—á—à–µ üí´",
  "–¢—ã ‚Äî —Ä–∞–¥–æ—Å—Ç—å –≤ –º–æ—ë–º –¥–Ω–µ üå∏",
  "–° —Ç–æ–±–æ–π –≤—Å—ë –∫–∞–∂–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω—ã–º üåü",
  "–¢—ã ‚Äî –º–æ–π –º–∞–ª–µ–Ω—å–∫–∏–π –∞–Ω–≥–µ–ª üëº",
  "–¢—ã –ª—É—á—à–∞—è, —á—Ç–æ –µ—Å—Ç—å üíï",
  "–¢—ã –Ω–∞–ø–æ–ª–Ω—è–µ—à—å —Å–µ—Ä–¥—Ü–µ —Ç–µ–ø–ª–æ–º üî•",
  "–° —Ç–æ–±–æ–π –ª–µ–≥–∫–æ –∏ —Å–≤–µ—Ç–ª–æ üåû",
  "–¢—ã –æ—Å–æ–±–µ–Ω–Ω–∞—è, –Ω–µ –∑–∞–±—ã–≤–∞–π –æ–± —ç—Ç–æ–º üå∑",
  "–¢—ã ‚Äî –∏—Å—Ç–æ—á–Ω–∏–∫ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è üé®",
  "–¢—ã —Å–∞–º—ã–π –Ω–µ–∂–Ω—ã–π –ª—É—á–∏–∫ —Å–æ–ª–Ω—Ü–∞ üåÖ"
];

let score = 0;
const gameTime = 30; // —Å–µ–∫—É–Ω–¥
let timerId = null;
let gameActive = false;

function randomPosition(size) {
  const maxX = gameArea.clientWidth - size;
  const maxY = gameArea.clientHeight - size;
  return {
    x: Math.floor(Math.random() * maxX),
    y: Math.floor(Math.random() * maxY)
  };
}

function createCreature() {
  const creature = document.createElement('div');
  creature.classList.add('creature');
  creature.textContent = creatures[Math.floor(Math.random() * creatures.length)];

  const pos = randomPosition(80);
  creature.style.left = pos.x + 'px';
  creature.style.top = pos.y + 'px';

  creature.addEventListener('touchstart', (e) => {
    e.preventDefault();
    onCreatureClick(creature, pos);
  });
  creature.addEventListener('click', () => {
    onCreatureClick(creature, pos);
  });

  gameArea.appendChild(creature);
}

function onCreatureClick(creature, pos) {
  if (!gameActive) return;
  if (creature.classList.contains('happy')) return;

  creature.classList.add('happy');
  score++;
  scoreEl.textContent = '–û—á–∫–∏: ' + score;
  showHearts(pos.x + 40, pos.y + 40);

  setTimeout(() => {
    creature.remove();
    if (gameActive) createCreature();
  }, 800);
}

function showHearts(x, y) {
  const heart = document.createElement('div');
  heart.textContent = '‚ù§Ô∏è';
  heart.style.position = 'absolute';
  heart.style.left = x + 'px';
  heart.style.top = y + 'px';
  heart.style.fontSize = '24px';
  heart.style.userSelect = 'none';
  heart.style.pointerEvents = 'none';
  heart.style.animation = 'rise 1s ease-out forwards';
  gameArea.appendChild(heart);

  setTimeout(() => heart.remove(), 1000);
}

function showGift() {
  const giftBtn = document.createElement('button');
  giftBtn.textContent = 'üéÅ –¢–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫!';
  giftBtn.style.marginTop = '10px';
  giftBtn.style.padding = '10px 20px';
  giftBtn.style.fontSize = '18px';
  giftBtn.style.borderRadius = '12px';
  giftBtn.style.border = 'none';
  giftBtn.style.backgroundColor = '#ffb6c1';
  giftBtn.style.color = '#fff';
  giftBtn.style.cursor = 'pointer';

  giftBtn.addEventListener('click', () => {
    const phrase = cutePhrases[Math.floor(Math.random() * cutePhrases.length)];
    alert(phrase);
  });

  messageEl.appendChild(document.createElement('br'));
  messageEl.appendChild(giftBtn);
}

startBtn.addEventListener('click', () => {
  if (gameActive) return;
  score = 0;
  scoreEl.textContent = '–û—á–∫–∏: 0';
  messageEl.textContent = '–û–±–Ω–∏–º–∏ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –∑–≤–µ—Ä–µ–π! –í—Ä–µ–º—è: 30 —Å–µ–∫—É–Ω–¥';
  gameActive = true;
  gameArea.innerHTML = '';
  createCreature();

  let timeLeft = gameTime;
  startBtn.disabled = true;

  timerId = setInterval(() => {
    timeLeft--;
    if (timeLeft > 0) {
      messageEl.textContent = `–û–±–Ω–∏–º–∏ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –∑–≤–µ—Ä–µ–π! –í—Ä–µ–º—è: ${timeLeft} —Å–µ–∫—É–Ω–¥`;
    } else {
      clearInterval(timerId);
      gameActive = false;
      messageEl.textContent = `–¢—ã –æ–±–Ω—è–ª(–∞) ${score} –∑–≤–µ—Ä–µ–π! –í–æ—Ç —Ç–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫ –∑–∞ –∑–∞–±–æ—Ç—É:`;
      showGift();
      startBtn.disabled = false;
    }
  }, 1000);
});
